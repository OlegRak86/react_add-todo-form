{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","HelpFunction/getUserById.tsx","components/Form/Form.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","Form","newTodos","setNewTodos","useState","selectUser","setSelectUser","titleValue","setTitleValue","hasErrorSelect","setHasErrorSelect","hasErrorTitle","setHasErrorTitle","newTodo","length","completed","todoWithUser","action","method","onSubmit","event","preventDefault","type","value","placeholder","onChange","target","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1f46e82.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../Types/User';\n\ntype Props = {\n  user: User;\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article data-id={todo.id} className=\"TodoInfo TodoInfo--completed\">\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../Types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    { todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport const getUserById = (userId:number) => {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n};\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../Types/Todo';\nimport { getUserById } from '../../HelpFunction/getUserById';\n\ntype Props = {\n  newTodos: Todo[];\n  setNewTodos: (newTodos:Todo[]) => void;\n};\nexport const Form: React.FC<Props> = ({ newTodos, setNewTodos }) => {\n  const [selectUser, setSelectUser] = useState(0);\n  const [titleValue, setTitleValue] = useState('');\n  const [hasErrorSelect, setHasErrorSelect] = useState(false);\n  const [hasErrorTitle, setHasErrorTitle] = useState(false);\n  const newTodo = {\n    id: newTodos.length + 1,\n    title: titleValue,\n    completed: false,\n    userId: selectUser,\n  };\n  const todoWithUser = {\n    ...newTodo,\n    user: getUserById(newTodo.userId),\n  };\n  const reset = () => {\n    setHasErrorSelect(false);\n    setHasErrorTitle(false);\n    setTitleValue('');\n    setSelectUser(0);\n  };\n\n  const handeltSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (selectUser === 0) {\n      setHasErrorSelect(true);\n    } else {\n      setHasErrorSelect(false);\n    }\n\n    if (titleValue.length === 0) {\n      setHasErrorTitle(true);\n    } else {\n      setHasErrorTitle(false);\n    }\n\n    if (titleValue.length === 0 || selectUser === 0) {\n      return;\n    }\n\n    setNewTodos([...newTodos, todoWithUser]);\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handeltSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={titleValue}\n          placeholder=\"Enter the Title\"\n          onChange={event => setTitleValue(event.target.value)}\n        />\n        {hasErrorTitle && <span className=\"error\">Please enter a title</span>}\n\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={selectUser}\n          onChange={event => setSelectUser(+event.target.value)}\n        >\n          <option\n            key={selectUser}\n            disabled={selectUser > 0}\n          >\n            Choose a user\n\n          </option>\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n        {hasErrorSelect\n          && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport { Form } from './components/Form/Form';\nimport { getUserById } from './HelpFunction/getUserById';\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App:React.FC = () => {\n  const [newTodos, setNewTodos] = useState(todos);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <Form\n        newTodos={newTodos}\n        setNewTodos={setNewTodos}\n      />\n\n      <section className=\"TodoList\">\n        <TodoList\n          todos={newTodos}\n        />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}